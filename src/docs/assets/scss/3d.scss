@mixin makemearealboy {
  /* re-used to set up :before :after pseudo elements*/
  display: block;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
}

$paperedge: #eee; /* TODO: the paper edges of the book - a subtle #fefefe -> #f1f1f1 CSS gradient might be nicer here */

$lighting-effect: linear-gradient(100deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.2) 25%, rgba(0,0,0,0.25) 50%, rgba(255,255,255,0) 100%); /* The surface effect: mostly transparent white and black gradients*/

img{ /* some CSS resets set this to 100% - we don't want that here*/
 max-width: none
};


/*
 $aspect-ratio is either 7:9 (.76) or 8:10 (.8) ratio for all SitePoint books and shouldn't change unless the book format changes. */

$aspect-ratio:       7/9.15;
$aspect-ratio:       8/10;
$spine-ratio:        0.06; /* standard width book spines*/
$spine-ratio-chunky: 0.08;  /* for books with fatter spines*/
$book-perspective:   3.5;  /* Lower numbers make appearance more warped by perspective. */

$perspective: $book-perspective;

/* -- Spin speed -- */

$spin-speed: 12s; 

/* -- Preset Book Display Sizes -- */


/* WIDTHS  */

$height-small: 150px;
$height-mid:   300px;
$height-large: 450px;

/* HEIGHTS  */

$width-small: $height-small * $aspect-ratio;
$width-mid:   $height-mid   * $aspect-ratio;
$width-large: $height-large * $aspect-ratio;

/* SPINES  */

$spine-small: $height-small * $spine-ratio;
$spine-mid:   $height-mid   * $spine-ratio;
$spine-large: $height-large * $spine-ratio;

/* CHUNKY SPINES */

$spine-small-chunky: $height-small * $spine-ratio;
$spine-mid-chunky:   $height-mid   * $spine-ratio;
$spine-large-chunky: $height-large * $spine-ratio;

$perspective: $book-perspective * $height-large;



/* Calculate other book dimensions */

.book.size-small {
  height: $height-small;
  width: $width-small;
  -webkit-perspective: $height-small * $book-perspective;
          perspective: $height-small * $book-perspective;
  -webkit-transform: perspective($height-small * $book-perspective);
          transform: perspective($height-small * $book-perspective);
  .backcover {
    -webkit-transform: perspective($perspective) rotateY(180deg) translateZ($spine-small);
            transform: perspective($perspective) rotateY(180deg) translateZ($spine-small);
    &:before,
    &:after {
      width: $spine-small;
    }
  }
}

.book.size-mid {
  height: $height-mid;
  width: $width-mid;
  -webkit-perspective: $height-mid * $book-perspective;
          perspective: $height-mid * $book-perspective;
  .backcover {
    -webkit-transform: perspective($perspective) rotateY(180deg) translateZ($spine-mid);
            transform: perspective($perspective) rotateY(180deg) translateZ($spine-mid);
        
    &:before,
    &:after {
      width: $spine-mid;
    }
  }
}

.book.size-large {
  height: $height-large;
  width: $width-large;
  -webkit-perspective: $perspective;
  perspective: $perspective;
  -webkit-transform: perspective(perspective);
  transform: perspective(perspective);
  .backcover {
    -webkit-transform: perspective($perspective) rotateY(180deg) translateZ($spine-large);
            transform: perspective($perspective) rotateY(180deg) translateZ($spine-large);
    &:before,
    &:after {
      width: $spine-large;
    }
  }
}

.book {
  /* book container*/
  margin: 2em;
  position: relative;
}



.cover {
  /* This is a mask to crop the IMG to only cover */
  position: relative;
  overflow: hidden;
  height: 100%;
  width: 100%;
  z-index: 1;
  -webkit-box-shadow: 0px 0px 4px rgba(0, 0, 0, .15), 3px 3px 4px rgba(0, 0, 0, .3), 6px 6px 4px rgba(0, 0, 0, .1);
          box-shadow: 0px 0px 4px rgba(0, 0, 0, .15), 3px 3px 4px rgba(0, 0, 0, .3), 6px 6px 4px rgba(0, 0, 0, .1); /* for flat render only*/
  &:after {
    /* the reflection effect across the IMG cover */
    @include makemearealboy;
    height: 100%;
    width: 100%;
    opacity: 1;
    background-image: $lighting-effect, none;
    background-size: 500% 200%, auto 100%;  
    background-position: 80% 100%, center top ; 
    background-repeat: repeat;
    top: 0;
    left: 0;
    position: relative;
    z-index: 12;
  }
}

.view3d .cover {
  -webkit-box-shadow: none;
          box-shadow: none;
  /* remove anchoring shadow in 3D view */
}

.cover img {
  float: right;
  height: 100%;
}

.view3d .bookgroup {
  /* an added wrapper via JS*/
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  -webkit-transform-origin: 50% 50%;
      -ms-transform-origin: 50% 50%;
          transform-origin: 50% 50%;
  -webkit-transform: rotateY(0deg) rotateX(0deg);
          transform: rotateY(0deg) rotateX(0deg); /*default view*/
  height: 100%;
  width: 100%;
  position: relative;
  &:before,
  &:after { /* top edge*/
    @include makemearealboy;
    -webkit-transform-style: preserve-3d;
            transform-style: preserve-3d;
    background: $paperedge;
    top: 0%;
    -webkit-transform-origin: 0% 0%;
        -ms-transform-origin: 0% 0%;
            transform-origin: 0% 0%;
    width: 100%;
    height: (100%*$spine-ratio);
    -webkit-transform: perspective($perspective) rotateY(0deg) rotateX(-90deg) translateX(0px);
            transform: perspective($perspective) rotateY(0deg) rotateX(-90deg) translateX(0px); /*default view*/
  }
  &:after { /* base edge (inc 'grounding' shadow)*/
    top: 100%;
    -webkit-box-shadow: 0px 0px 5px rgba(0, 0, 0, .75), 2px 2px 15px rgba(0, 0, 0, .5);
            box-shadow: 0px 0px 5px rgba(0, 0, 0, .75), 2px 2px 15px rgba(0, 0, 0, .5);
  }
}

.backcover {
  /* Generated JS : Div containing current cover of BG*/
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  height: 100%;
  width: 100%;
  background: red, red;
  background-size: 500% 200%, auto 100%;  
  background-position: -200% 100%, left top ;
  position: absolute;
  top: 0px;
  z-index: -1;
  right: 0px;
  &:before,
  &:after {
    /* :before is the right page edge*/
    @include makemearealboy;
    background: $paperedge;
    height: 100%;
    -webkit-transform: perspective($perspective) rotateY(90deg);
            transform: perspective($perspective) rotateY(90deg);
    -webkit-transform-origin: (0% 50%);
        -ms-transform-origin: (0% 50%);
            transform-origin: (0% 50%);
    z-index: 9;
  }
  &:after { //spine 
    -webkit-transform: perspective($perspective) rotateY(90deg) translateZ(0px);
            transform: perspective($perspective) rotateY(90deg) translateZ(0px);
    left: 100%;
    background-size: 500% 200%, auto 100%;
    -webkit-transform-origin: (0% 50%);
        -ms-transform-origin: (0% 50%);
            transform-origin: (0% 50%);
    background: inherit; /* picks up BG image from parent (yay!)*/
    background-position: center center
  }
}


/* =======  POSING CLASSES ========== 

// oclock notation: Viewer stands at 12 and model faces hour markers
//     +------------+
//     |  Viewer    |
//     +------------+
//           12
//      11        1
//  10       ^        2
//           |
// 9         |         3
//       +-model-+
//  8        +        4
//
//      7         5
//           6
//
//+----------------------+
//|  Class = '.clock-12' |
//+----------------------+ */

.oclock-12 .bookgroup {
  -webkit-transform: rotateY(0deg) rotateX(0deg);
          transform: rotateY(0deg) rotateX(0deg); /*default view*/
}
.oclock-1 .bookgroup {
  -webkit-transform: rotateY(-30deg) rotateX(0deg);
          transform: rotateY(-30deg) rotateX(0deg); 
}
.oclock-2 .bookgroup {
  -webkit-transform: rotateY(-60deg) rotateX(0deg);
          transform: rotateY(-60deg) rotateX(0deg); 
}
.oclock-3 .bookgroup {
  -webkit-transform: rotateY(-90deg) rotateX(0deg);
          transform: rotateY(-90deg) rotateX(0deg); 
}
.oclock-4 .bookgroup {
  -webkit-transform: rotateY(-120deg) rotateX(0deg);
          transform: rotateY(-120deg) rotateX(0deg); 
}
.oclock-5 .bookgroup {
  -webkit-transform: rotateY(-150deg) rotateX(0deg);
          transform: rotateY(-150deg) rotateX(0deg); 
}
.oclock-6 .bookgroup {
  -webkit-transform: rotateY(-180deg) rotateX(0deg);
          transform: rotateY(-180deg) rotateX(0deg); /*reverse side*/
}
.oclock-7 .bookgroup {
  -webkit-transform: rotateY(-210deg) rotateX(0deg);
          transform: rotateY(-210deg) rotateX(0deg); 
}
.oclock-8 .bookgroup {
  -webkit-transform: rotateY(-240deg) rotateX(0deg);
          transform: rotateY(-240deg) rotateX(0deg); 
}
.oclock-9 .bookgroup {
  -webkit-transform: rotateY(-270deg) rotateX(0deg);
          transform: rotateY(-270deg) rotateX(0deg); 
}
.oclock-10 .bookgroup {
  -webkit-transform: perspective($perspective) rotateY(-300deg) rotateX(0deg);
          transform: perspective($perspective) rotateY(-300deg) rotateX(0deg); 
}
.oclock-11 .bookgroup {
  -webkit-transform: perspective($perspective) rotateY(-330deg) rotateX(0deg);
          transform: perspective($perspective) rotateY(-330deg) rotateX(0deg); 
}









